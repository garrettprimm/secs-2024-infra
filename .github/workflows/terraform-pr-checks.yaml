name: Terraform CI

on:
  pull_request:
    branches:
      - prod

jobs:
  terraform-fmt-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: latest

      - name: Terraform Format Check
        run: terraform fmt -check

  terraform-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: latest

      - name: Terraform Initialization
        run: terraform init -backend=false

      - name: Terraform Validation
        run: terraform validate

  tflint:
    runs-on: ubuntu-latest
    steps:
      - name: Run tflint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: latest

  # tfsec:
  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: read # for actions/checkout to fetch code
  #     security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
  #     actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
  #     pull-requests: write

  #   steps:
  #     - name: Clone repo
  #       uses: actions/checkout@master
      # - name: tfsec
      #   uses: aquasecurity/tfsec-pr-commenter-action@v1.3.1
      #   with:
      #     github_token: ${{ github.token }}
      #     soft_fail_commenter: false
      #     tfsec_formats: sarif
      #     tfsec_args: --config-file .tfsec/tfsec.yml --force-all-dirs
      # - name: tfsec
      #   uses: aquasecurity/tfsec-sarif-action@v0.1.0
      #   with:
      #     full_repo_scan: true 
      #     config_file: .tfsec/tfsec/yml

      # - name: Upload SARIF file
      #   uses: github/codeql-action/upload-sarif@v2
      #   if: success() || failure()
      #   with:
      #     sarif_file: results.sarif.json
    
  trivy:
    name: trivy
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'sarid'
          output: 'trivy-results.sarif'
          exit-code: '1'
          ignore-unfixed: false
          severity: 'CRITICAL,HIGH'
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: trivy-results.sarif